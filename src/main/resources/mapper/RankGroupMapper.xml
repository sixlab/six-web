<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sixlab.six.web.mapper.RankGroupMapper">
  <resultMap id="BaseResultMap" type="cn.sixlab.six.web.models.RankGroup">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    <result column="group_level" jdbcType="INTEGER" property="groupLevel" />
    <result column="group_order" jdbcType="INTEGER" property="groupOrder" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, parent_id, group_name, group_level, group_order, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rank_group
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rank_group
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.sixlab.six.web.models.RankGroup">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into rank_group (parent_id, group_name, group_level, 
      group_order, create_time)
    values (#{parentId,jdbcType=INTEGER}, #{groupName,jdbcType=VARCHAR}, #{groupLevel,jdbcType=INTEGER}, 
      #{groupOrder,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.sixlab.six.web.models.RankGroup">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into rank_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="groupName != null">
        group_name,
      </if>
      <if test="groupLevel != null">
        group_level,
      </if>
      <if test="groupOrder != null">
        group_order,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="groupLevel != null">
        #{groupLevel,jdbcType=INTEGER},
      </if>
      <if test="groupOrder != null">
        #{groupOrder,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.sixlab.six.web.models.RankGroup">
    update rank_group
    <set>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="groupName != null">
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="groupLevel != null">
        group_level = #{groupLevel,jdbcType=INTEGER},
      </if>
      <if test="groupOrder != null">
        group_order = #{groupOrder,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.sixlab.six.web.models.RankGroup">
    update rank_group
    set parent_id = #{parentId,jdbcType=INTEGER},
      group_name = #{groupName,jdbcType=VARCHAR},
      group_level = #{groupLevel,jdbcType=INTEGER},
      group_order = #{groupOrder,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>